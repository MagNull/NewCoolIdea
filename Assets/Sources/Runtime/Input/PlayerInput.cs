//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/Sources/Runtime/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f8ef9cb5-cc22-41d0-bc98-4064af6313e8"",
            ""actions"": [
                {
                    ""name"": ""Select Character"",
                    ""type"": ""Button"",
                    ""id"": ""4590ec30-7f98-4112-9d74-282c07ff32cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel Selection"",
                    ""type"": ""Button"",
                    ""id"": ""14526e69-e383-45ae-a091-d08fa2997248"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target Command"",
                    ""type"": ""Button"",
                    ""id"": ""456616cd-1834-4d5a-a10f-f9dd67434490"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Warrior Hotkey"",
                    ""type"": ""Button"",
                    ""id"": ""13291bf0-0f21-4907-822d-141b1bb3c525"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enchanter Hotkey"",
                    ""type"": ""Button"",
                    ""id"": ""b5135845-5ed2-4699-8f45-ca7ba7c03ab7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ranger Hotkey"",
                    ""type"": ""Button"",
                    ""id"": ""2b81aeac-a28b-4cad-9f40-6cc095c5cb57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0f3341ca-9d09-4fdb-a277-0b4407f046b2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b4a6096-d385-4a28-95c4-bd76bd258e11"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""247bab5e-fcb0-4966-8bee-9bd024047d27"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Target Command"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0abf586-39dd-4807-8d9e-7a218a6dca7c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Warrior Hotkey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""991ee4de-fd08-47a7-aee6-7736f81b63d4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enchanter Hotkey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3eb90654-1766-41ab-8987-9def058c278e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ranger Hotkey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_SelectCharacter = m_Player.FindAction("Select Character", throwIfNotFound: true);
        m_Player_CancelSelection = m_Player.FindAction("Cancel Selection", throwIfNotFound: true);
        m_Player_TargetCommand = m_Player.FindAction("Target Command", throwIfNotFound: true);
        m_Player_WarriorHotkey = m_Player.FindAction("Warrior Hotkey", throwIfNotFound: true);
        m_Player_EnchanterHotkey = m_Player.FindAction("Enchanter Hotkey", throwIfNotFound: true);
        m_Player_RangerHotkey = m_Player.FindAction("Ranger Hotkey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_SelectCharacter;
    private readonly InputAction m_Player_CancelSelection;
    private readonly InputAction m_Player_TargetCommand;
    private readonly InputAction m_Player_WarriorHotkey;
    private readonly InputAction m_Player_EnchanterHotkey;
    private readonly InputAction m_Player_RangerHotkey;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectCharacter => m_Wrapper.m_Player_SelectCharacter;
        public InputAction @CancelSelection => m_Wrapper.m_Player_CancelSelection;
        public InputAction @TargetCommand => m_Wrapper.m_Player_TargetCommand;
        public InputAction @WarriorHotkey => m_Wrapper.m_Player_WarriorHotkey;
        public InputAction @EnchanterHotkey => m_Wrapper.m_Player_EnchanterHotkey;
        public InputAction @RangerHotkey => m_Wrapper.m_Player_RangerHotkey;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @SelectCharacter.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectCharacter;
                @SelectCharacter.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectCharacter;
                @SelectCharacter.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectCharacter;
                @CancelSelection.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelSelection;
                @CancelSelection.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelSelection;
                @CancelSelection.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelSelection;
                @TargetCommand.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTargetCommand;
                @TargetCommand.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTargetCommand;
                @TargetCommand.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTargetCommand;
                @WarriorHotkey.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWarriorHotkey;
                @WarriorHotkey.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWarriorHotkey;
                @WarriorHotkey.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWarriorHotkey;
                @EnchanterHotkey.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnchanterHotkey;
                @EnchanterHotkey.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnchanterHotkey;
                @EnchanterHotkey.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnchanterHotkey;
                @RangerHotkey.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRangerHotkey;
                @RangerHotkey.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRangerHotkey;
                @RangerHotkey.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRangerHotkey;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SelectCharacter.started += instance.OnSelectCharacter;
                @SelectCharacter.performed += instance.OnSelectCharacter;
                @SelectCharacter.canceled += instance.OnSelectCharacter;
                @CancelSelection.started += instance.OnCancelSelection;
                @CancelSelection.performed += instance.OnCancelSelection;
                @CancelSelection.canceled += instance.OnCancelSelection;
                @TargetCommand.started += instance.OnTargetCommand;
                @TargetCommand.performed += instance.OnTargetCommand;
                @TargetCommand.canceled += instance.OnTargetCommand;
                @WarriorHotkey.started += instance.OnWarriorHotkey;
                @WarriorHotkey.performed += instance.OnWarriorHotkey;
                @WarriorHotkey.canceled += instance.OnWarriorHotkey;
                @EnchanterHotkey.started += instance.OnEnchanterHotkey;
                @EnchanterHotkey.performed += instance.OnEnchanterHotkey;
                @EnchanterHotkey.canceled += instance.OnEnchanterHotkey;
                @RangerHotkey.started += instance.OnRangerHotkey;
                @RangerHotkey.performed += instance.OnRangerHotkey;
                @RangerHotkey.canceled += instance.OnRangerHotkey;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnSelectCharacter(InputAction.CallbackContext context);
        void OnCancelSelection(InputAction.CallbackContext context);
        void OnTargetCommand(InputAction.CallbackContext context);
        void OnWarriorHotkey(InputAction.CallbackContext context);
        void OnEnchanterHotkey(InputAction.CallbackContext context);
        void OnRangerHotkey(InputAction.CallbackContext context);
    }
}
